!function(e,o,t){"use strict";e.fn.geoInput=function(n){var r,s,a,i,l=this,p=e(this),d=p.attr("id");l.map=null,l.mapOptions={},l.marker=new o.maps.Marker,r={latLngStringToGoogle:function(e){var t=e.split(",");return new o.maps.LatLng(t[0],t[1])},latLngGoogleToString:function(e){return e.lat().toFixed(i.precision)+","+e.lng().toFixed(i.precision)},validateUniqueElementId:function(o){return 1===e("#"+d).length?!0:!1}},i=e.extend({apikey:"<APIKEY>",width:"300px",height:"150px",bgColorMap:"#A3C3FF",bgColor:"#DDD",txtColor:"#000",precision:6,zoomLevel:2,mapCenter:"0,0"},n),s=function(){var e="dmgig_"+d+"_zoomLevel",o="dmgig_"+d+"_mapCenter";return{storeZoomLevel:function(o){sessionStorage.setItem(e,o),console.log(sessionStorage)},storeMapCenter:function(e){sessionStorage.setItem(o,r.latLngGoogleToString(e)),console.log(sessionStorage)},getStoredZoom:function(){var o=sessionStorage.getItem(e);return null!==o&&(o=parseInt(o)),console.log(o),o},getStoredMapCenter:function(){var e=sessionStorage.getItem(o);return null!=e&&(e=r.latLngStringToGoogle(e)),console.log(e),e},clearPreferences:function(){sessionStorage.removeItem(e),sessionStorage.removeItem(o),console.log(sessionStorage)}}}(),i.mapCenter=r.latLngStringToGoogle(i.mapCenter),s.getStoredZoom()&&(i.zoomLevel=s.getStoredZoom()),s.getStoredMapCenter()&&(i.mapCenter=s.getStoredMapCenter()),p.empty();var a=function(){function o(o,t,n){return o.css({width:"16px",height:"16px",padding:"3px 2px","float":n,color:i.color,"background-color":i.bgcolor,"text-align":"center",cursor:"pointer"}),t=e("<img />").attr("src",t).css({width:"16px",height:"16px"}),o.html(t),o}function n(e,o){return e.css({height:"16px",padding:"1px",margin:"1px",color:i.color,"background-color":i.bgcolor,"font-size":"12px","font-family":"console",cursor:"pointer"}),e.html(o),e.hover(function(){e.css({color:i.bgcolor,"background-color":i.color})},function(){e.css({color:i.color,"background-color":i.bgColor})}),e}function r(e,o){return e.css({width:"16px",height:"16px",padding:"1px",margin:"1px","float":o}),e}var a={};return a.geoInput=e("<div/>",{id:"dmgig_geoInput_"+d}),a.map=e("  <div/>",{id:"dmgig_map_"+d}).appendTo(a.geoInput),a.mapControls=e("  <div/>").appendTo(a.geoInput),a.geoControls=e("  <div/>").appendTo(a.geoInput),a.clear=e('    <div style="clear:both"></div>').appendTo(a.geoControls),a.rGeoResults=e("  <div/>").appendTo(a.geoInput),a.rgcTable=e("    <table>").appendTo(a.rGeoResults),a.rgcHead=e("      <thead>").appendTo(a.rgcTable),a.rgcTr=e("        <tr>").appendTo(a.rgcHead),a.rgcTh1=e("          <th>&nbsp;&nbsp;&nbsp;Result Sets Found:</th>").appendTo(a.rgcTr),a.rgcTh2=e("          <th></th>").appendTo(a.rgcTr),p.append(a.geoInput),a.latLngDisplay=e("<div/>"),a.revGeoCodeResultsBody=e("<tbody>"),a.revGeoCodeFoundCount=e("<span/>"),a.prefsPanel=e("<div/>"),a.geoCode=e("<div/>",{title:"geocode from text"}),a.revGeoCode=e("<div/>",{title:"reverse geocode marker location"}),a.markerToCenter=e("<div/>",{title:"bring marker(s) to center"}),a.centerOnMarker=e("<div/>",{title:"center map on marker(s)"}),a.revGeoCodeResultsHide=e("<span/>",{title:"hide results"}),a.togglePrefs=e("<div/>",{title:"toggle preferences"}),a.storeZoomLevel=e("<div/>",{title:"store zoom level"}),a.storeMapCenter=e("<div/>",{title:"store map center"}),a.storeMarkerCount=e("<div/>",{title:"store marker count"}),a.clearPreferences=e("<div/>",{title:"clear data storage"}),a.geoCodeInput=e("<input/>"),a.latInput=e("<input/>",{type:"hidden",name:"lat"}),a.lngInput=e("<input/>",{type:"hidden",name:"lng"}),a.hiddenInputs=e("<div/>"),a.spacerRight=e("<div/>"),a.spacerLeft=e("<div/>"),a.mapControls.append(a.latLngDisplay),"<APIKEY>"!==i.apikey&&""!==i.apikey?a.geoControls.prepend(a.geoCode,a.geoCodeInput,a.spacerLeft,a.revGeoCode,a.togglePrefs,a.spacerRight,a.markerToCenter,a.centerOnMarker):a.geoControls.prepend(a.geoCode,a.geoCodeInput,a.spacerLeft,a.togglePrefs,a.spacerRight,a.markerToCenter,a.centerOnMarker),a.rgcTh1.prepend(a.revGeoCodeResultsHide),a.rgcTh1.append(a.revGeoCodeFoundCount),a.rgcTable.append(a.revGeoCodeResultsBody),a.rGeoResults.after(a.latInput,a.lngInput,a.hiddenInputs),a.prefsPanel.append(a.storeZoomLevel,a.storeMapCenter,a.clearPreferences),a.geoControls.after(a.prefsPanel),a.geoInput.css({"font-family":"Arial",width:i.width,position:"relative",border:"1px solid #AAA"}),a.map.css({width:i.width,height:i.height,border:"1px solid #CCC","background-color":i.bgColor,"text-align":"center"}),a.map.html("<br /><br />loading..."),a.rGeoResults.css({clear:"both",display:"none",left:"-1px",width:"calc("+i.width+" - 8px)","background-color":"#FFF",border:"2px solid #CCC",position:"absolute","z-index":"5555","text-align":"left",padding:"3px"}),a.rgcTable.css({"font-size":"12px","font-family":"Arial"}),a.prefsPanel.append(e("<img />").attr("src",t.gear)).css({clear:"both",display:"none",left:"-1px",width:"calc("+i.width+" - 2px)","background-color":"#DDD",border:"2px solid #CCC",position:"absolute","z-index":"9999"}),a.latLngDisplay.css({"font-family":"monospace","font-size":"12px","text-align":"center","background-color":"#333",color:"#FFF","margin-bottom":"2px"}),a.latLngDisplay.html("0,0"),o(a.geoCode,t.plane,"left"),o(a.revGeoCode,t.find,"left"),o(a.markerToCenter,t.center,"right"),o(a.centerOnMarker,t.marker,"right"),o(a.togglePrefs,t.gear,"right"),a.revGeoCodeResultsHide.html("&times;").css("cursor","pointer"),n(a.storeZoomLevel,"store zoom level"),n(a.storeMapCenter,"store map center position"),n(a.storeMarkerCount,"store markers count"),n(a.clearPreferences,"clear storage data"),a.geoCodeInput.css({"float":"left"}),r(a.spacerRight,"right"),r(a.spacerLeft,"left"),a.geoCode.on("click",function(){l.geocodeTextLocation()}),a.revGeoCode.on("click",function(){l.reverseGeocodeMarkerPosition()}),a.centerOnMarker.on("click",function(){l.centerToMarker()}),a.markerToCenter.on("click",function(){l.markerToCenter()}),a.storeZoomLevel.on("click",function(){s.storeZoomLevel(l.map.getZoom())}),a.storeMapCenter.on("click",function(){s.storeMapCenter(l.map.getCenter())}),a.clearPreferences.on("click",function(){s.clearPreferences()}),a.revGeoCodeResultsHide.on("click",function(){a.rGeoResults.hide()}),a.togglePrefs.click(function(){var e=p.data("clicks");e?a.prefsPanel.slideToggle():a.prefsPanel.slideToggle(),p.data("clicks",!e)}),a}();return l.initialize=function(){l.mapOptions={zoom:i.zoomLevel,center:i.mapCenter},l.map=new o.maps.Map(document.getElementById("dmgig_map_"+d),l.mapOptions),l.marker.setPosition(i.mapCenter),l.marker.setMap(l.map),l.marker.setDraggable(!0),l.setLatLngInputs()},l.watchMarkerMove=o.maps.event.addListener(l.marker,"dragend",function(){l.setLatLngInputs(),a.hiddenInputs.empty()}),l.setLatLngInputs=function(){var e,o;e=l.marker.getPosition(),o=e.lat().toFixed(i.precision)+","+e.lng().toFixed(i.precision),a.latLngDisplay.html(o),a.latInput.val(e.lat().toFixed(i.precision)),a.lngInput.val(e.lng().toFixed(i.precision))},l.centerToMarker=function(){l.map.setCenter(l.marker.getPosition()),l.setLatLngInputs()},l.markerToCenter=function(){l.marker.setPosition(l.map.getCenter()),l.setLatLngInputs()},l.geocodeTextLocation=function(){var t,n,r;r=a.geoCodeInput.val(),t=encodeURIComponent(a.geoCodeInput.val()),e.get("https://maps.googleapis.com/maps/api/geocode/json?address="+t,function(e){n=new o.maps.LatLng(e.results[0].geometry.location.lat,e.results[0].geometry.location.lng),l.map.setCenter(n),l.markerToCenter()}).fail(function(){alert("Failed to geocode "+r)})},l.reverseGeocodeMarkerPosition=function(){var o,t,n,r,s,p=[];n=l.marker.getPosition(),r=n.lat().toString()+","+n.lng().toString(),s=encodeURIComponent(r),o="https://maps.googleapis.com/maps/api/geocode/json",p.push("latlng="+s),p.push("location_type=ROOFTOP"),p.push("result_type=street_address"),p.push("key="+i.apikey),t=o+"?"+p.join("&"),e.get(t,function(o){var t,n;if(a.hiddenInputs.empty(),a.revGeoCodeResultsBody.empty(),a.revGeoCodeFoundCount.html(o.results.length),a.rGeoResults.show(),0!==o.results.length){t=o.results[0].address_components;for(n in t)e(l.revGeocodeResultsMakeRow(t[n].long_name,t[n].types)).appendTo(a.revGeoCodeResultsBody),e(l.revGeocodeResultsAddHiddenInputs(t[n].short_name,t[n].types))}}).fail(function(){alert("Failed to reverse geocode "+r)})},l.revGeocodeResultsMakeRow=function(o,t){return e("<tr><td><b>"+o+"</b> <i>"+t.join(", ")+"</i></td><td>&square;</td></tr>")},l.revGeocodeResultsAddHiddenInputs=function(o,t){e("<input/>",{type:"hidden",name:t[0],value:o}).appendTo(a.hiddenInputs)},l.parent_form=p.closest("form"),l.parent_form.on("submit",function(){return a.geoCodeInput.prop("disabled",!0),setTimeout(function(){a.geoCodeInput.prop("disabled",!1)},300),!1}),r.validateUniqueElementId(p)?(console.log(i.apikey),void l.initialize()):(console.log("geoInput Err: input elements require unique ids."),!1)}}(jQuery,google,dmgig_icons);